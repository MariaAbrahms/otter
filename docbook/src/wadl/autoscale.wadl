<?xml version="1.0" encoding="UTF-8"?>
<!--*******************************************************-->
<!-- Import Common XML Entities -->
<!-- -->
<!-- You can resolve the entites with xmllint -->
<!-- -->
<!-- xmllint -noent autoscale.wadl -->
<!--*******************************************************-->
<!-- need xmlns:identity to use &commonFaults; &getFaults; &postPutFaults; in METHODS -->
<!DOCTYPE application [
<!ENTITY % common SYSTEM "../common/common.ent">
%common;
]>
<application xmlns="http://wadl.dev.java.net/2009/02"
    xmlns:identity="http://docs.openstack.org/identity/api/v2.0"
    xmlns:db="http://docbook.org/ns/docbook"
    xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
    xmlns:wadl="http://wadl.dev.java.net/2009/02"
    xmlns:osapi="http://docs.openstack.org/compute/api/v1.1"
    xmlns:xlink="http://www.w3.org/1999/xlink"
    xmlns:xsd="http://www.w3.org/2001/XMLSchema"
    xmlns:rax="http://docs.rackspace.com/api"
    xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0">
    <!-- ======================================================================================= -->
    <!-- Resources -->
    <!-- ======================================================================================= -->
    <resources base="https://{region}.autoscale.api.rackspacecloud.com/">
        <resource id="version" path="v1.0/" rax:roles="admin autoscale:admin autoscale:service-admin">

            <!-- GROUPS resource -->
            <resource id="tenantid" path="/{tenantId}">
                <param name="tenantId" type="xsd:string" required="true" style="template">
                    <doc>A subscriber to the autoscaling service</doc>
                </param>
                <resource id="groups" path="/groups">
                    <param name="X-Auth-Token" style="header" type="xsd:string" required="true">
                        <doc>A valid authentication token</doc>
                    </param>

                    <method href="#getGroups"/>
                    <method href="#createGroup"/>

                    <resource id="group" path="/{groupId}">

                        <param name="groupId" type="osapi:UUID" required="true" style="template">
                            <doc>A scaling group</doc>
                        </param>
                        <method href="#getGroupManifest"/>
                        <method href="#deleteGroup"/>

                        <resource id="group_state" path="/state">
                            <method href="#getGroupState"/>
                        </resource>

                        <resource id="group_config" path="/config">
                            <method href="#getGroupConfig"/>
                            <method href="#putGroupConfig"/>
                        </resource>
                        <resource id="launch_configuration" path="/launch">
                            <method href="#getLaunchConfig"/>
                            <method href="#putLaunchConfig"/>
                        </resource>

                        <resource id="pause" path="/pause">
                            <method href="#pauseGroup"/>
                        </resource>
                        <resource id="resume" path="/resume">
                            <method href="#resumeGroup"/>
                        </resource>

                        <!-- POLICIES resource -->
                        <resource id="policies" path="/policies">
                            <method href="#getPolicies"/>
                            <method href="#createPolicies"/>

                            <resource id="policy" path="/{policyId}">
                                <param name="policyId" type="osapi:UUID" required="true" style="template">
                                    <doc>A scaling policy</doc>
                                </param>
                                <method href="#getPolicy"/>
                                <method href="#putPolicy"/>
                                <method href="#deletePolicy"/>

                                <resource id="execute" path="/execute">
                                    <method href="#executePolicy"/>
                                </resource>

                                <resource id="webhooks" path="/webhooks">
                                    <method href="#getWebhooks"/>
                                    <method href="#createWebhook"/>

                                    <resource id="webhook" path="/{webhookId}">
                                        <param name="webhookId" type="osapi:UUID" required="true" style="template">
                                            <doc>A webhook</doc>
                                        </param>
                                        <method href="#getWebhook"/>
                                        <method href="#putWebhook"/>
                                        <method href="#deleteWebhook"/>
                                    </resource>
                                </resource>
                            </resource>
                        </resource>
                    </resource>
                </resource>
            </resource>
            <resource id="anonymous_execute_webhook" path="/execute/{capability_version}/{capability_hash}/">
                <param name="capability_version" required="true" style="template" type="xsd:string"/>
                <param name="capability_hash" required="true" style="template" type="xsd:string"/>
                <method href="#anonymousExecute"/>
            </resource>
        </resource>
    </resources>
    <!-- ======================================================================================= -->
    <!-- Methods -->
    <!-- ======================================================================================= -->
      <method id="createGroup" name="POST">
          <wadl:doc title="Create Group" xmlns="http://docbook.org/ns/docbook">
            <para role="shortdesc">
                This operation creates an autoscaling group.
            </para>
            <para>
                This operation creates an autoscaling group or a collection of servers and load balancers that are managed by a scaling policy.
                To describe the group you wish to create, specify the scaling group configuration, launch configuration, and optional scaling
                policies in the request body in JSON format. For a successful request, the response body describes
                the created group in JSON format. The response includes an ID and links for the group.
            </para>
        </wadl:doc>
        <request>
            <representation mediaType="application/json">

	      <param style="plain"
		     name="launchConfiguration"
		     required="true"
		     type="object"
		     path="$.launchConfiguration">
		<wadl:doc xmlns="http://docbook.org/ns/docbook">DESCRIBEME. </wadl:doc>
	      </param>
	      <param style="plain"
		     name="loadBalancers"
		     required="false"
		     type="array"
		     path="$.launchConfiguration.args.loadBalancers">
		<wadl:doc xmlns="http://docbook.org/ns/docbook">One or more load balancers to add new servers to. All servers will be added to these load balancers with their ServiceNet addresses, and will be enabled, of primary type, and equally weighted. If new servers are not connected to the ServiceNet, they will not be added to any load balancers.</wadl:doc>
	      </param>
	      <param style="plain"
		     name="port"
		     required="true"
		     type="integer"
		     path="$.launchConfiguration.type.item.args.loadBalancers.[*].port">
		<wadl:doc xmlns="http://docbook.org/ns/docbook">The port number of the service (on the new servers) to load balance on for this particular load balancer.</wadl:doc>
	      </param>
	      <param style="plain"
		     name="loadBalancerId"
		     required="true"
		     type="integer"
		     path="$.launchConfiguration.type.item.args.loadBalancers.[*].loadBalancerId">
		<wadl:doc xmlns="http://docbook.org/ns/docbook">The ID of the load balancer to which new servers will be added.</wadl:doc>
	      </param>
	      <param style="plain"
		     name="server"
		     required="true"
		     type="object"
		     path="$.launchConfiguration.type.item.args.server">
		<wadl:doc xmlns="http://docbook.org/ns/docbook">Attributes to provide to nova create server: http://docs.rackspace.com/servers/api/v2/cs-devguide/content/CreateServers.html.Whatever attributes are passed here will apply to all new servers (including the name attribute).</wadl:doc>
	      </param>
	      <param style="plain"
		     name="flavorRef"
		     required="true"
		     type="string"
		     path="$.launchConfiguration.type.item.args.server.flavorRef">
		<wadl:doc xmlns="http://docbook.org/ns/docbook">DESCRIBEME. </wadl:doc>
	      </param>
	      <param style="plain"
		     name="imageRef"
		     required="true"
		     type="string"
		     path="$.launchConfiguration.type.item.args.server.imageRef">
		<wadl:doc xmlns="http://docbook.org/ns/docbook">DESCRIBEME. </wadl:doc>
	      </param>
	      <param style="plain"
		     name="personality"
		     required="false"
		     type="array"
		     path="$.launchConfiguration.type.item.args.server.personality">
		<wadl:doc xmlns="http://docbook.org/ns/docbook">DESCRIBEME. </wadl:doc>
	      </param>
	      <param style="plain"
		     name="path"
		     required="true"
		     type="string"
		     path="$.launchConfiguration.type.item.args.server.personality.[*].path">
		<wadl:doc xmlns="http://docbook.org/ns/docbook">DESCRIBEME. </wadl:doc>
	      </param>
	      <param style="plain"
		     name="contents"
		     required="true"
		     type="string"
		     path="$.launchConfiguration.type.item.args.server.personality.[*].contents">
		<wadl:doc xmlns="http://docbook.org/ns/docbook">DESCRIBEME. </wadl:doc>
	      </param>
	      <param style="plain"
		     name="args"
		     required="true"
		     type="object"
		     path="$.launchConfiguration.args">
		<wadl:doc xmlns="http://docbook.org/ns/docbook">DESCRIBEME. </wadl:doc>
	      </param>
	      <param style="plain"
		     name="type"
		     required="true"
		     type="string"
		     path="$.launchConfiguration.type">
		<wadl:doc xmlns="http://docbook.org/ns/docbook">The type of launch config this is.</wadl:doc>
	      </param>
	      <param style="plain"
		     name="groupConfiguration"
		     required="true"
		     type="object"
		     path="$.groupConfiguration">
		<wadl:doc xmlns="http://docbook.org/ns/docbook">Configuration options for the scaling group, controlling scaling rate, size, and metadata</wadl:doc>
	      </param>
	      <param style="plain"
		     name="maxEntities"
		     required="false"
		     type="object"
		     path="$.groupConfiguration.maxEntities">
		<wadl:doc xmlns="http://docbook.org/ns/docbook">Maximum number of entities in the scaling group. Defaults to null, meaning no maximum.  When given, this number must be an integer. A value between 0 and 1000. </wadl:doc>
	      </param>
	      <param style="plain"
		     name="name"
		     required="true"
		     type="string"
		     path="$.groupConfiguration.name">
		<wadl:doc xmlns="http://docbook.org/ns/docbook">Name of the scaling group (this name does not have to be unique).</wadl:doc>
	      </param>
	      <param style="plain"
		     name="cooldown"
		     required="true"
		     type="integer"
		     path="$.groupConfiguration.cooldown">
		<wadl:doc xmlns="http://docbook.org/ns/docbook">Cooldown period before more entities are added, given in seconds.  This number must be an integer. Min is 0 seconds, max is 86400 seconds (24 hrs * 60 min * 60 sec). A value between 0 and 86400. </wadl:doc>
	      </param>
	      <param style="plain"
		     name="minEntities"
		     required="true"
		     type="integer"
		     path="$.groupConfiguration.minEntities">
		<wadl:doc xmlns="http://docbook.org/ns/docbook">Minimum number of entities in the scaling group. This number must be an integer. A value between 0 and 1000. </wadl:doc>
	      </param>
	      <param style="plain"
		     name="metadata"
		     required="false"
		     type="object"
		     path="$.groupConfiguration.metadata">
		<wadl:doc xmlns="http://docbook.org/ns/docbook">DESCRIBEME. </wadl:doc>
	      </param>
	      <param style="plain"
		     name="scalingPolicies"
		     required="true"
		     type="array"
		     path="$.scalingPolicies">
		<wadl:doc xmlns="http://docbook.org/ns/docbook">WRITEME</wadl:doc>
	      </param>
	      <param style="plain"
		     name="array"
		     required="true"
		     type="array"
		     path="$.scalingPolicies.[*]">
		<wadl:doc xmlns="http://docbook.org/ns/docbook">WRITEME</wadl:doc>
	      </param>
	      <param style="plain"
		     name="name"
		     required="true"
		     type="string"
		     path="$.scalingPolicies.[*].name">
		<wadl:doc xmlns="http://docbook.org/ns/docbook">A name for this scaling policy. This name does have to be unique for all scaling policies.</wadl:doc>
	      </param>
	      <param style="plain"
		     name="args"
		     required="false"
		     type="object"
		     path="$.scalingPolicies.[*].args">
		<wadl:doc xmlns="http://docbook.org/ns/docbook">DESCRIBEME. </wadl:doc>
	      </param>
	      <param style="plain"
		     name="cron"
		     required="false"
		     type="string"
		     path="$.scalingPolicies.[*].args.cron">
		<wadl:doc xmlns="http://docbook.org/ns/docbook">The recurrence pattern as a cron entry. This describes at what timesin the future will the scaling policy get executed. For example, if this is'1 0 * * *' then the policy will get executed at one minute past midnight(00:01) of every day of the month, of every day of the week.Kindly check http://en.wikipedia.org/wiki/Cron</wadl:doc>
	      </param>
	      <param style="plain"
		     name="at"
		     required="false"
		     type="string"
		     path="$.scalingPolicies.[*].args.at">
		<wadl:doc xmlns="http://docbook.org/ns/docbook">The time at which this policy will be executed. This property is mutuallyexclusive w.r.t 'cron'. Either 'cron' or 'at' can be given. Not both.</wadl:doc>
	      </param>
	      <param style="plain"
		     name="changePercent"
		     required="false"
		     type="number"
		     path="$.scalingPolicies.[*].changePercent">
		<wadl:doc xmlns="http://docbook.org/ns/docbook">A non-zero percent change to make in the number of servers in the scaling group.  If positive, the number of servers will increase by the given percentage.  If negative, the number of servers will decrease by the given percentage. The absolute change in the number of servers will be rounded to the nearest integer away than zero. This means that if -X% of the current number of servers turns out to be -0.5 or -0.25 or -0.75 servers, the actual number of servers that will be shut down is 1. And if X% of current number of servers turn out to be 1.2 or 1.5 or 1.7 servers, the actual number of servers that will be launched is 2</wadl:doc>
	      </param>
	      <param style="plain"
		     name="cooldown"
		     required="true"
		     type="number"
		     path="$.scalingPolicies.[*].cooldown">
		<wadl:doc xmlns="http://docbook.org/ns/docbook">Cooldown period (given in seconds) before this particular scaling policy can be executed again.  This cooldown period does not affect the global scaling group cooldown.  Min is 0 seconds, max is 86400 seconds (24 hrs * 60 min * 60 sec). A value between 0 and 86400. </wadl:doc>
	      </param>
	      <param style="plain"
		     name="type"
		     required="true"
		     type="enum"
		     path="$.scalingPolicies.[*].type">
		<wadl:doc xmlns="http://docbook.org/ns/docbook">DESCRIBEME. Valid values: webhook, schedule.</wadl:doc>
	      </param>
	      <param style="plain"
		     name="change"
		     required="false"
		     type="integer"
		     path="$.scalingPolicies.[*].change">
		<wadl:doc xmlns="http://docbook.org/ns/docbook">A non-zero integer change to make in the number of servers in the scaling group.  If positive, the number of servers will increase.  If negative, the number of servers will decrease.</wadl:doc>
	      </param>
	      <param style="plain"
		     name="desiredCapacity"
		     required="false"
		     type="integer"
		     path="$.scalingPolicies.[*].desiredCapacity">
		<wadl:doc xmlns="http://docbook.org/ns/docbook">The desired capacity of the group - i.e. how many servers there should be (an absolute number, rather than a delta from the current number of servers). For example, if this is 10 and then executing policy with this will bring the number of servers to 10. The minimum allowed value is 0. </wadl:doc>
	      </param>

                <wadl:doc xml:lang="en">
                    <xsdxt:code href="../docbkx/samples/reqCreateGroup.json"/>
                </wadl:doc>
            </representation>
        </request>
        <response status="201">
            <param name="location" style="header"
                   required="true" type="xsd:anyURI">
            <doc>This operation creates an autoscaling endpoint</doc>
            </param>
            <representation mediaType="application/json">
                <doc xml:lang="en">
                    <xsdxt:code href="../docbkx/samples/resCreateGroup.json"/>
                </doc>
            </representation>
        </response>
          &commonFaults; &getFaults; &postPutFaults;
    </method>

    <method id="getGroups" name="GET" rax:roles="observer autoscale:observer">
        <wadl:doc title="List Scaling Groups" xml:lang="EN"
            xmlns="http://docbook.org/ns/docbook">
            <para role="shortdesc">
                This operation lists the autoscaling groups that are available for the specified tenant.
            </para>
            <para>
                This operation returns a list of autoscaling groups that have been created for the tenant specified by
                <code>tenantID</code>.</para>
        </wadl:doc>
        <response status="200">
            <representation mediaType="application/json">
                <doc xml:lang="en">
                    <xsdxt:code href="../docbkx/samples/resGetGroups.json"/>
                </doc>
            </representation>
        </response>
        &commonFaults; &getFaults;
    </method>

    <method id="getGroupManifest" name="GET" rax:roles="observer autoscale:observer">
        <wadl:doc title="List All Group Details" xmlns="http://docbook.org/ns/docbook">
            <para role="shortdesc">
                This operation returns details about the configuration for a specified autoscaling group.
            </para>
            <para>
                This operation returns details including the launch configuration and the scaling policies for the specified autoscaling group configuration. These
                details are returned in the response body in JSON format.
            </para>
        </wadl:doc>
        <response status="200">
            <representation mediaType="application/json">
                <doc xml:lang="en">
                    <xsdxt:code href="../docbkx/samples/resGetGroupManifest.json"/>
                </doc>
            </representation>
        </response>
        &commonFaults; &getFaults;
    </method>

    <method id="deleteGroup" name="DELETE">
        <doc title="Delete Group">
            <db:para role="shortdesc">
                This operation deletes an autoscaling group.
            </db:para>
            <p xmlns="http://www.w3.org/1999/xhtml">
                This operation deletes the specified autoscaling group if the group is empty.
                An empty group contains no entities. If deletion is successful, no response body is returned. If
                the group contains pending or active entities, deletion fails and a 409 error message is returned. Pass force=true to force
                delete the group, ignoring pending/active entities.
            </p>
        </doc>
        <response status="204"/>
        &commonFaults; &getFaults; &postPutFaults;
    </method>

    <method id="getGroupState" name="GET" rax:roles="observer autoscale:observer">
        <doc title="Get Group State">
            <db:para role="shortdesc">
               This operation returns the state of an autoscaling group.
            </db:para>
            <p xmlns="http://www.w3.org/1999/xhtml">
                This operation retrieves the current state of the specified autoscaling group.
                It describes the state of the group in terms of its
                current set of active entities, the number of pending entities, and
                the desired number of entities. The description is returned in the response body
                in JSON format.
            </p>
        </doc>
        <response status="200">
            <representation mediaType="application/json">
                <doc xml:lang="en">
                    <xsdxt:code href="../docbkx/samples/resGetGroupState.json"/>
                </doc>
            </representation>
        </response>
        &commonFaults; &getFaults;
    </method>

    <method id="getGroupConfig" name="GET" rax:roles="observer autoscale:observer">
        <doc title="Get Group Configuration">
            <db:para role="shortdesc">
               This operation lists the configuration for an autoscaling group.
            </db:para>
            <p xmlns="http://www.w3.org/1999/xhtml">
                This operation lists the configuration for a specified autoscaling group.
                The configuration describes the
                minimum number of entities in the group,
                the maximum number of entities in the group,
                the global
                cooldown time for the group, and other metadata. The configuration is returned in the response body in JSON format.
            </p>
        </doc>
        <response status="200">
            <representation mediaType="application/json">
                <doc xml:lang="en">
                    <xsdxt:code href="../docbkx/samples/resGetGroupConfig.json"/>
                </doc>
            </representation>
        </response>
        &commonFaults; &getFaults;
    </method>

    <method id="putGroupConfig" name="PUT">
        <doc title="Replace Group Configuration">
            <db:para role="shortdesc">
                This operation updates the configuration for the autoscaling group.
            </db:para>
            <p xmlns="http://www.w3.org/1999/xhtml">
            This operation changes the configuration of an existing autoscaling group.
            To change the configuration,
            specify the new configuration in the request body in JSON format.
            Configuration elements include
            the
            minimum number of entities, the maximum number of entities, the global
            cooldown time, and other metadata. If the update is successful, no response body is
            returned.
            </p>
        </doc>
        <request>
            <representation mediaType="application/json">
	      <param style="plain"
		     name="maxEntities"
		     required="true"
		     type="object"
		     path="$.maxEntities">
		<wadl:doc xmlns="http://docbook.org/ns/docbook">Maximum number of entities in the scaling group. Defaults to null, meaning no maximum.  When given, this number must be an integer. A value between 0 and 1000. </wadl:doc>
	      </param>
	      <param style="plain"
		     name="cooldown"
		     required="true"
		     type="integer"
		     path="$.cooldown">
		<wadl:doc xmlns="http://docbook.org/ns/docbook">Cooldown period before more entities are added, given in seconds.  This number must be an integer. Min is 0 seconds, max is 86400 seconds (24 hrs * 60 min * 60 sec). A value between 0 and 86400. </wadl:doc>
	      </param>
	      <param style="plain"
		     name="name"
		     required="true"
		     type="string"
		     path="$.name">
		<wadl:doc xmlns="http://docbook.org/ns/docbook">Name of the scaling group (this name does not have to be unique).</wadl:doc>
	      </param>
	      <param style="plain"
		     name="minEntities"
		     required="true"
		     type="integer"
		     path="$.minEntities">
		<wadl:doc xmlns="http://docbook.org/ns/docbook">Minimum number of entities in the scaling group. This number must be an integer. A value between 0 and 1000. </wadl:doc>
	      </param>
	      <param style="plain"
		     name="metadata"
		     required="true"
		     type="object"
		     path="$.metadata">
		<wadl:doc xmlns="http://docbook.org/ns/docbook">User-provided key-value metadata.  Both keys and values should be strings not exceeding 256 characters in length.</wadl:doc>
	      </param>
                <doc xml:lang="en">
                    <xsdxt:code href="../docbkx/samples/reqPutGroupConfig.json"/>
                </doc>
            </representation>
        </request>
        <response status="204"/>
        &commonFaults; &getFaults; &postPutFaults;
    </method>

    <method id="getLaunchConfig" name="GET" rax:roles="observer autoscale:observer">
        <doc title="Get Launch Configuration">
            <db:para role="shortdesc">
                This operation lists the launch configuration.
            </db:para>
            <p xmlns="http://www.w3.org/1999/xhtml">
                This operation lists the launch configuration for the specified autoscaling group.
                The launch configuration describes the details of how to create a server,
                from what image to create a server,
                which load
                balancers to join the server to, which networks to add the server to, and other
                metadata. The launch configuration is returned in the response body in JSON
                format.
            </p>
        </doc>
        <response status="200">
            <representation mediaType="application/json">
                <doc xml:lang="en">
                    <xsdxt:code href="../docbkx/samples/resGetLaunchConfig.json"/>
                </doc>
            </representation>
        </response>
        &commonFaults; &getFaults;
    </method>

    <method id="putLaunchConfig" name="PUT">
        <doc title="Replace Launch Configuration">
            <db:para role="shortdesc">
                This operation updates the launch group configuration.
            </db:para>
            <p xmlns="http://www.w3.org/1999/xhtml">
                This operation changes an existing launch configuration for the specified autoscaling group.
                To change the launch configuration,
                specify the new configuration in the request body in JSON format.
                Configuration elements include
                how to create a server,
                from what image to create a server,
                which load
                balancers to join the server to, which networks to add the server to, and other
                metadata. If the update is successful, no response body is returned.
            </p>
        </doc>
        <request>
            <representation mediaType="application/json">
	      <param style="plain"
		     name="args"
		     required="false"
		     type="object"
		     path="$.args">
		<wadl:doc xmlns="http://docbook.org/ns/docbook">DESCRIBEME. </wadl:doc>
	      </param>
	      <param style="plain"
		     name="loadBalancers"
		     required="false"
		     type="array"
		     path="$.args.loadBalancers">
		<wadl:doc xmlns="http://docbook.org/ns/docbook">One or more load balancers to add new servers to. All servers will be added to these load balancers with their ServiceNet addresses, and will be enabled, of primary type, and equally weighted. If new servers are not connected to the ServiceNet, they will not be added to any load balancers.</wadl:doc>
	      </param>
	      <param style="plain"
		     name="port"
		     required="true"
		     type="integer"
		     path="$.args.loadBalancers.[*].port">
		<wadl:doc xmlns="http://docbook.org/ns/docbook">The port number of the service (on the new servers) to load balance on for this particular load balancer.</wadl:doc>
	      </param>
	      <param style="plain"
		     name="loadBalancerId"
		     required="true"
		     type="integer"
		     path="$.args.loadBalancers.[*].loadBalancerId">
		<wadl:doc xmlns="http://docbook.org/ns/docbook">The ID of the load balancer to which new servers will be added.</wadl:doc>
	      </param>
	      <param style="plain"
		     name="server"
		     required="true"
		     type="object"
		     path="$.args.server">
		<wadl:doc xmlns="http://docbook.org/ns/docbook">Attributes to provide to nova create server: http://docs.rackspace.com/servers/api/v2/cs-devguide/content/CreateServers.html.Whatever attributes are passed here will apply to all new servers (including the name attribute).</wadl:doc>
	      </param>
	      <param style="plain"
		     name="flavorRef"
		     required="true"
		     type="string"
		     path="$.args.server.flavorRef">
		<wadl:doc xmlns="http://docbook.org/ns/docbook">DESCRIBEME. </wadl:doc>
	      </param>
	      <param style="plain"
		     name="imageRef"
		     required="true"
		     type="string"
		     path="$.args.server.imageRef">
		<wadl:doc xmlns="http://docbook.org/ns/docbook">DESCRIBEME. </wadl:doc>
	      </param>
	      <param style="plain"
		     name="personality"
		     required="false"
		     type="array"
		     path="$.args.server.personality">
		<wadl:doc xmlns="http://docbook.org/ns/docbook">DESCRIBEME. </wadl:doc>
	      </param>
	      <param style="plain"
		     name="path"
		     required="true"
		     type="string"
		     path="$.args.server.personality.[*].path">
		<wadl:doc xmlns="http://docbook.org/ns/docbook">DESCRIBEME. </wadl:doc>
	      </param>
	      <param style="plain"
		     name="contents"
		     required="true"
		     type="string"
		     path="$.args.server.personality.[*].contents">
		<wadl:doc xmlns="http://docbook.org/ns/docbook">DESCRIBEME. </wadl:doc>
	      </param>
                <doc xml:lang="en">
                    <xsdxt:code href="../docbkx/samples/reqPutLaunchConfig.json"/>
                </doc>
            </representation>
        </request>
        <response status="204"/>
        &commonFaults; &getFaults; &postPutFaults;
    </method>

    <method id="pauseGroup" name="POST">
        <doc title="Pause Group Policy Execution">
            <db:para role="shortdesc">
                This operation pauses the execution of a scaling policy.
            </db:para>
            <p xmlns="http://www.w3.org/1999/xhtml">
                This operation pauses the execution of all autoscaling policies for the specified autoscaling group.
IMPORTANT: This operation has not been implemented in the Auto Scale API yet and will be implemented in a future release.
            </p>
        </doc>
        <request>
            <representation mediaType="application/json">
                <doc xml:lang="en"/>
            </representation>
        </request>
        <response status="204"/>
        &commonFaults; &getFaults; &postPutFaults;
    </method>

    <method id="resumeGroup" name="POST">
        <doc title="Resume Group Policy Execution">
            <db:para role="shortdesc">
                This operation resumes the execution of an autoscaling policy.
IMPORTANT: This operation has not been implemented in the Auto Scale API yet and will be implemented in a future release.
            </db:para>
            <p xmlns="http://www.w3.org/1999/xhtml">
                This operation resumes the execution of all autoscaling policies for the specified autoscaling group.
            </p>
        </doc>
        <request>
            <representation mediaType="application/json">
                <doc xml:lang="en"/>
            </representation>
        </request>
        <response status="204"/>
        &commonFaults; &getFaults; &postPutFaults;
    </method>

    <method name="GET" id="getPolicies" rax:roles="observer autoscale:observer">
        <doc title="Get Policies List">
            <db:para role="shortdesc">
                This operation lists scaling policies in the autoscaling group.
            </db:para>
            <p xmlns="http://www.w3.org/1999/xhtml">
            This operation returns a list of the scaling policies that are available to the specified autoscaling group.
            Each policy is described in terms of an ID,
            name, type, adjustment, cooldown time, and links. These
            descriptions are returned in the response body in JSON format.
            </p>
        </doc>
        <response status="200">
            <representation mediaType="application/json">
                <doc xml:lang="en">
                    <xsdxt:code href="../docbkx/samples/resGetPolicies.json"/>
                </doc>
            </representation>
        </response>
        &commonFaults; &getFaults;
    </method>

    <method name="POST" id="createPolicies">
        <doc title="Create Policy">
            <db:para role="shortdesc">
                This operation creates an autoscaling policy.
            </db:para>
            <p xmlns="http://www.w3.org/1999/xhtml">
            This operation creates one or multiple autoscaling policies for the specified autoscaling group.
            To create a policy, specify it in the request body in JSON format.
            Each description must include a name, type, adjustment, and cooldown time.
            </p>
            <p xmlns="http://www.w3.org/1999/xhtml">
            Use the JSON response to obtain information about the newly-created policy or policies:
            <ul>
                <li>The response header points to the List Policies endpoint.</li>
                <li>The response body provides an array of scaling policies.</li>
            </ul>
            </p>
        </doc>
        <request>
            <representation mediaType="application/json">
	      <param style="plain"
		     name="array"
		     required="true"
		     type="string"
		     path="$.[*]">
		<wadl:doc xmlns="http://docbook.org/ns/docbook">An array of scaling policies.</wadl:doc>
	      </param>
	      <param style="plain"
		     name="name"
		     required="true"
		     type="string"
		     path="$.[*].name">
		<wadl:doc xmlns="http://docbook.org/ns/docbook">A name for this scaling policy. This name does have to be unique for all scaling policies.</wadl:doc>
	      </param>
	      <param style="plain"
		     name="args"
		     required="false"
		     type="object"
		     path="$.[*].args">
		<wadl:doc xmlns="http://docbook.org/ns/docbook">DESCRIBEME. </wadl:doc>
	      </param>
	      <param style="plain"
		     name="cron"
		     required="false"
		     type="string"
		     path="$.[*].args.cron">
		<wadl:doc xmlns="http://docbook.org/ns/docbook">The recurrence pattern as a cron entry. This describes at what timesin the future will the scaling policy get executed. For example, if this is'1 0 * * *' then the policy will get executed at one minute past midnight(00:01) of every day of the month, of every day of the week.Kindly check http://en.wikipedia.org/wiki/Cron</wadl:doc>
	      </param>
	      <param style="plain"
		     name="at"
		     required="false"
		     type="string"
		     path="$.[*].args.at">
		<wadl:doc xmlns="http://docbook.org/ns/docbook">The time at which this policy will be executed. This property is mutuallyexclusive w.r.t 'cron'. Either 'cron' or 'at' can be given. Not both.</wadl:doc>
	      </param>
	      <param style="plain"
		     name="changePercent"
		     required="false"
		     type="number"
		     path="$.[*].changePercent">
		<wadl:doc xmlns="http://docbook.org/ns/docbook">A non-zero percent change to make in the number of servers in the scaling group.  If positive, the number of servers will increase by the given percentage.  If negative, the number of servers will decrease by the given percentage. The absolute change in the number of servers will be rounded to the nearest integer away than zero. This means that if -X% of the current number of servers turns out to be -0.5 or -0.25 or -0.75 servers, the actual number of servers that will be shut down is 1. And if X% of current number of servers turn out to be 1.2 or 1.5 or 1.7 servers, the actual number of servers that will be launched is 2</wadl:doc>
	      </param>
	      <param style="plain"
		     name="cooldown"
		     required="true"
		     type="number"
		     path="$.[*].cooldown">
		<wadl:doc xmlns="http://docbook.org/ns/docbook">Cooldown period (given in seconds) before this particular scaling policy can be executed again.  This cooldown period does not affect the global scaling group cooldown.  Min is 0 seconds, max is 86400 seconds (24 hrs * 60 min * 60 sec). A value between 0 and 86400. </wadl:doc>
	      </param>
	      <param style="plain"
		     name="type"
		     required="true"
		     type="enum"
		     path="$.[*].type">
		<wadl:doc xmlns="http://docbook.org/ns/docbook">DESCRIBEME. Valid values: webhook, schedule.</wadl:doc>
	      </param>
	      <param style="plain"
		     name="change"
		     required="false"
		     type="integer"
		     path="$.[*].change">
		<wadl:doc xmlns="http://docbook.org/ns/docbook">A non-zero integer change to make in the number of servers in the scaling group.  If positive, the number of servers will increase.  If negative, the number of servers will decrease.</wadl:doc>
	      </param>
	      <param style="plain"
		     name="desiredCapacity"
		     required="false"
		     type="integer"
		     path="$.[*].desiredCapacity">
		<wadl:doc xmlns="http://docbook.org/ns/docbook">The desired capacity of the group - i.e. how many servers there should be (an absolute number, rather than a delta from the current number of servers). For example, if this is 10 and then executing policy with this will bring the number of servers to 10. The minimum allowed value is 0. </wadl:doc>
	      </param>
                <doc xml:lang="en">
		  <p xmlns="http://www.w3.org/1999/xhtml">
		    The examples below demonstrate several methods of creating autoscaling policies:
		    <ul>
                      <li>a request to create a policy based on desired capacity</li>
                      <li>a request to create a policy based on incremental change</li>
                      <li>a request to create a policy based on change percentage</li>
                      <li>a request to create a policy based on change percentage scheduled daily, at a specific time of day</li>
                      <li>a request to create a policy based on change percentage scheduled once, for a specific date and time</li>
                      <li>a request to create a policy based on change percentage in response to an alarm</li>
                      <li>a request to create multiple policies, followed by the matching response</li>
		    </ul>
		  </p>
                    <xsdxt:sample title="Create Policy (Desired Capacity) Request: JSON" >
                        <xsdxt:code href="../docbkx/samples/reqCreatePolicy-desiredCapacity.json"/>
                    </xsdxt:sample>
                    <xsdxt:sample title="Create Policy (Incremental Change) Request: JSON" >
                        <xsdxt:code href="../docbkx/samples/reqCreatePolicy-change.json"/>
                    </xsdxt:sample>
                    <xsdxt:sample title="Create Policy (Percentage Change) Request: JSON" >
                        <xsdxt:code href="../docbkx/samples/reqCreatePolicy-changePercent.json"/>
                    </xsdxt:sample>
                    <xsdxt:sample title="Create Policy (Percentage Change at Time) Request: JSON" >
                        <xsdxt:code href="../docbkx/samples/reqCreatePolicy-changePercentTime.json"/>
                    </xsdxt:sample>
                    <xsdxt:sample title="Create Policy (Percentage Change on Date) Request: JSON" >
                        <xsdxt:code href="../docbkx/samples/reqCreatePolicy-changePercentDate.json"/>
                    </xsdxt:sample>
                    <xsdxt:sample title="Create Policies Request: JSON" >
                        <xsdxt:code href="../docbkx/samples/reqCreatePolicies.json"/>
                    </xsdxt:sample>
                </doc>
            </representation>
        </request>
        <response status="201">
            <representation mediaType="application/json">
                <doc xml:lang="en">
                    <xsdxt:sample title="Create Policies Response: JSON" >
                        <xsdxt:code href="../docbkx/samples/resCreatePolicies.json"/>
                    </xsdxt:sample>
                </doc>
            </representation>
        </response>
        &commonFaults; &getFaults; &postPutFaults;
    </method>

    <method name="GET" id="getPolicy" rax:roles="observer autoscale:observer">
        <doc title="Get Policy Details">
            <db:para role="shortdesc">
                This operation returns details for a specified autoscaling policy.
            </db:para>
            <p xmlns="http://www.w3.org/1999/xhtml">
            This operation returns a description for the specified autoscaling policy.
            The description includes an ID, name, type,
            adjustment, cooldown time, and links. The description is returned in the
            response body in JSON format.
            </p>
        </doc>
        <response status="200">
            <representation mediaType="application/json">
                <doc xml:lang="en">
                    <xsdxt:code href="../docbkx/samples/resGetPolicy.json"/>
                </doc>
            </representation>
        </response>
        &commonFaults; &getFaults;
    </method>

    <method id="putPolicy" name="PUT">
        <doc title="Replace Policy">
            <db:para role="shortdesc">
                This operation updates an autoscaling policy.
            </db:para>
            <p xmlns="http://www.w3.org/1999/xhtml">
            This operation modifies an existing autoscaling policy for the specified tenant.
            To update the policy, specify the policy's name,
            type, adjustment, and cooldown time in the request body in JSON format. If the change is successful, no response body
            is returned.
            </p>
        </doc>
        <request>
            <representation mediaType="application/json">
	      <param style="plain"
		     name="name"
		     required="true"
		     path="$.name">
		<wadl:doc xmlns="http://docbook.org/ns/docbook">A name for this scaling policy. This name does have to be unique for all scaling policies.</wadl:doc>
	      </param>
	      <param style="plain"
		     name="args"
		     required="false"
		     path="$.args">
		<wadl:doc xmlns="http://docbook.org/ns/docbook">DESCRIBEME. </wadl:doc>
	      </param>
	      <param style="plain"
		     name="cron"
		     required="false"
		     path="$.args.cron">
		<wadl:doc xmlns="http://docbook.org/ns/docbook">The recurrence pattern as a cron entry. This describes at what timesin the future will the scaling policy get executed. For example, if this is'1 0 * * *' then the policy will get executed at one minute past midnight(00:01) of every day of the month, of every day of the week.Kindly check http://en.wikipedia.org/wiki/Cron</wadl:doc>
	      </param>
	      <param style="plain"
		     name="at"
		     required="false"
		     path="$.args.at">
		<wadl:doc xmlns="http://docbook.org/ns/docbook">The time at which this policy will be executed. This property is mutuallyexclusive w.r.t 'cron'. Either 'cron' or 'at' can be given. Not both.</wadl:doc>
	      </param>
	      <param style="plain"
		     name="changePercent"
		     required="false"
		     path="$.changePercent">
		<wadl:doc xmlns="http://docbook.org/ns/docbook">A non-zero percent change to make in the number of servers in the scaling group.  If positive, the number of servers will increase by the given percentage.  If negative, the number of servers will decrease by the given percentage. The absolute change in the number of servers will be rounded to the nearest integer away than zero. This means that if -X% of the current number of servers turns out to be -0.5 or -0.25 or -0.75 servers, the actual number of servers that will be shut down is 1. And if X% of current number of servers turn out to be 1.2 or 1.5 or 1.7 servers, the actual number of servers that will be launched is 2</wadl:doc>
	      </param>
	      <param style="plain"
		     name="cooldown"
		     required="true"
		     path="$.cooldown">
		<wadl:doc xmlns="http://docbook.org/ns/docbook">Cooldown period (given in seconds) before this particular scaling policy can be executed again.  This cooldown period does not affect the global scaling group cooldown.  Min is 0 seconds, max is 86400 seconds (24 hrs * 60 min * 60 sec). A value between 0 and 86400. </wadl:doc>
	      </param>
	      <param style="plain"
		     name="type"
		     required="true"
		     path="$.type">
		<wadl:doc xmlns="http://docbook.org/ns/docbook">DESCRIBEME. </wadl:doc>
	      </param>
	      <param style="plain"
		     name="change"
		     required="false"
		     path="$.change">
		<wadl:doc xmlns="http://docbook.org/ns/docbook">A non-zero integer change to make in the number of servers in the scaling group.  If positive, the number of servers will increase.  If negative, the number of servers will decrease.</wadl:doc>
	      </param>
	      <param style="plain"
		     name="desiredCapacity"
		     required="false"
		     path="$.desiredCapacity">
		<wadl:doc xmlns="http://docbook.org/ns/docbook">The desired capacity of the group - i.e. how many servers there should be (an absolute number, rather than a delta from the current number of servers). For example, if this is 10 and then executing policy with this will bring the number of servers to 10. The minimum allowed value is 0. </wadl:doc>
	      </param>
                <doc xml:lang="en">
                    <xsdxt:code href="../docbkx/samples/reqPutPolicy.json"/>
                </doc>
            </representation>
        </request>
        <response status="204"/>
        &commonFaults; &getFaults; &postPutFaults;
    </method>

    <method id="deletePolicy" name="DELETE">
        <doc title="Delete Policy">
            <db:para role="shortdesc">
                This operation deletes an autoscaling policy.
            </db:para>
            <p xmlns="http://www.w3.org/1999/xhtml">
                This operation deletes the specified autoscaling policy from the specified tenant.
                If deletion is successful, no response body is returned.
            </p>
        </doc>
        <response status="204"/>
        &commonFaults; &getFaults; &postPutFaults;
    </method>

    <method id="executePolicy" name="POST">
        <doc title="Execute Policy">
            <db:para role="shortdesc">
                This operation executes an autoscaling policy.
            </db:para>
            <p xmlns="http://www.w3.org/1999/xhtml">
                This operation executes the specified autoscaling policy. If execution is successful, a response body is
            returned.
            </p>
        </doc>
        <request>
            <representation mediaType="application/json">
                <doc xml:lang="en"/>
            </representation>
        </request>
        <response status="202"/>
        &commonFaults; &getFaults; &postPutFaults;
    </method>

    <method name="GET" id="getWebhooks">
        <doc title="Get a list of webhooks for the policy">
            <db:para role="shortdesc">
                This operation obtains a list of webhooks for the autoscaling policy.
            </db:para>
            <p xmlns="http://www.w3.org/1999/xhtml">
                This operation obtains a list of webhooks and their IDs for the specified autoscaling policy. This data is returned in
                the response body in JSON format.
            </p>
        </doc>
        <response status="200">
            <representation mediaType="application/json">
                <doc xml:lang="en">
                    <xsdxt:code href="../docbkx/samples/resGetWebhooks.json"/>
                </doc>
            </representation>
        </response>
        &commonFaults; &getFaults; &postPutFaults;
    </method>

    <method id="createWebhook" name="POST">
        <doc title="Create a webhook">
            <db:para role="shortdesc">
                This operation creates a webhook.
            </db:para>
            <p xmlns="http://www.w3.org/1999/xhtml">
            This operation creates one or more webhooks for the specified autoscaling policy. Webhooks must
            have a name. If successful, the response body will contain
            the IDs and links to the newly created webhooks. This data is provided
            in the request body in JSON format.
            </p>
        </doc>
        <request>
            <representation mediaType="application/json">
	      <param style="plain"
		     name="name"
		     required="true"
		     type="string"
		     path="$.[*].name">
		<wadl:doc xmlns="http://docbook.org/ns/docbook">A name for this webhook for logging purposes</wadl:doc>
	      </param>
	      <param style="plain"
		     name="metadata"
		     required="false"
		     type="object"
		     path="$.[*].metadata">
		<wadl:doc xmlns="http://docbook.org/ns/docbook">User-provided key-value metadata.  Both keys and values should be strings not exceeding 256 characters in length.</wadl:doc>
	      </param>
                <doc xml:lang="en">
                    <xsdxt:code href="../docbkx/samples/reqCreateWebhook.json"/>
                </doc>
            </representation>
        </request>
        <response status="201">
            <representation mediaType="application/json">
                <doc xml:lang="en">
                    <xsdxt:code href="../docbkx/samples/resCreateWebhook.json"/>
                </doc>
            </representation>
        </response>
        &commonFaults; &getFaults; &postPutFaults;
    </method>

    <method id="getWebhook" name="GET">
        <doc title="View Webhook">
            <db:para role="shortdesc">
                This operation returns the description for a webhook.
            </db:para>
            <p xmlns="http://www.w3.org/1999/xhtml">
            This operation returns a description of a webhook for the specified tenant and the specified autoscaling policy.
            The description is returned in the response body in JSON format.
            </p>
        </doc>
        <response status="200">
            <representation mediaType="application/json">
                <doc xml:lang="en">
                    <xsdxt:code href="../docbkx/samples/resGetWebhook.json"/>
                </doc>
            </representation>
        </response>
        &commonFaults; &getFaults;
    </method>

    <method id="putWebhook" name="PUT">
        <doc title="Update Webhook">
            <db:para role="shortdesc">
                This operation updates a webhook.
            </db:para>
            <p xmlns="http://www.w3.org/1999/xhtml">
            This operation changes the specified webhook for a specified enant and autoscaling policy.
            If the specified webhook is not recognized, the change is ignored.
            If you submit a URL, the URL is ignored but that does not invalidate the request.
            If the change is successful, no
            response body is returned.
            </p>
        </doc>
        <request>
            <representation mediaType="application/json">
	      <param style="plain"
		     name="name"
		     required="true"
		     path="$.[*].name">
		<wadl:doc xmlns="http://docbook.org/ns/docbook">A name for this webhook for logging purposes</wadl:doc>
	      </param>
	      <param style="plain"
		     name="metadata"
		     required="false"
		     path="$.[*].metadata">
		<wadl:doc xmlns="http://docbook.org/ns/docbook">User-provided key-value metadata. Both keys and values should be strings not exceeding 256 characters in length.</wadl:doc>
	      </param>
              <doc xml:lang="en">
                <xsdxt:code href="../docbkx/samples/reqPutWebhook.json"/>
              </doc>
            </representation>
        </request>
        <response status="204"/>
        &commonFaults; &getFaults; &postPutFaults;
    </method>

    <method id="deleteWebhook" name="DELETE">
        <doc title="Delete Webhook">
            <db:para role="shortdesc">
                This operation deletes a webhook.
            </db:para>
            <p xmlns="http://www.w3.org/1999/xhtml">
                This operation deletes the webhook for a specified autoscaling policy. If deletion is successful, no response body
                is returned.
            </p>
        </doc>
        <response status="204"/>
        &commonFaults; &getFaults; &postPutFaults;
    </method>

    <method id="anonymousExecute" name="POST">
        <doc title="Execute Anonymous Webhook">
            <db:para role="shortdesc">
                This operation executes an anonymous webhook.
            </db:para>
            <p xmlns="http://www.w3.org/1999/xhtml">This method executes an anonymous webhook.</p>
        </doc>
        <request>
            <representation mediaType="application/json">
                <doc xml:lang="en"/>
            </representation>
        </request>
        <response status="202"/>
        &commonFaults; &getFaults; &postPutFaults;
    </method>

</application>
